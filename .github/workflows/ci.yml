name: CI and Release

on:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-ubuntu:
    name: Build on Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.10'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Build executable with PyInstaller
        run: |
          source venv/bin/activate
          pyinstaller --onefile --name eagle main.py

      - name: Upload binary artifact
        if: startsWith(github.ref, 'refs/tags/') && success()
        uses: actions/upload-artifact@v3
        with:
          name: eagle-ubuntu-latest-v${{ env.VERSION }}
          path: dist/*

  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.10'
          architecture: 'x64'

      - name: Install dependencies
        run: |
          python -m venv venv
          venv\Scripts\activate
          pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Build executable with PyInstaller
        run: |
          venv\Scripts\activate
          pyinstaller --onefile --name eagle main.py

      - name: Upload binary artifact
        if: startsWith(github.ref, 'refs/tags/') && success()
        uses: actions/upload-artifact@v3
        with:
          name: eagle-windows-latest-v${{ env.VERSION }}
          path: dist/*

  build-macos:
    name: Build on macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.10'
          architecture: 'x64'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Build executable with PyInstaller
        run: |
          source venv/bin/activate
          pyinstaller --onefile --name eagle main.py

      - name: Upload binary artifact
        if: startsWith(github.ref, 'refs/tags/') && success()
        uses: actions/upload-artifact@v3
        with:
          name: eagle-macos-latest-v${{ env.VERSION }}
          path: dist/*

  release:
    name: Create Release
    needs: [build-ubuntu, build-windows, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')  
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          files: |
            artifacts/eagle-ubuntu-latest-v${{ env.VERSION }}/eagle
            artifacts/eagle-windows-latest-v${{ env.VERSION }}/eagle.exe
            artifacts/eagle-macos-latest-v${{ env.VERSION }}/eagle
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
